# -*- coding: utf-8 -*-


import numpy as np

from statsmodels.stats.outliers_influence import variance_inflation_factor as vif
from statsmodels.stats.multivariate_tools import feature_selection_vif as fsv


test_arr1 = np.array([[ 2.6304,   1.3896,   2.6304,   0.46253,  0.46483],
                      [-0.9426,   1.14394, -0.25827,  0.47976,  1.36252],
                      [ 0.25409,  2.14233, -0.86814,  0.85802,  0.16498],
                      [ 1.83533, -0.46444,  1.20203, -0.37433, -0.21041],
                      [-0.83101,  0.24385, -0.3984,  -1.01423,  0.24385],
                      [-0.20434,  np.NaN,  -1.55538, -1.55538,  0.87396],
                      [-0.13926, -0.07155,  1.51058, -1.72313,  0.15493],
                      [np.Inf,    0.73847, -1.13322,  np.NaN,   0.03807],
                      [-0.90375, -0.08102,  1.45346,  0.98227, -1.07415],
                      [ 0.03729, -0.48555, -0.48555, -1.38026,  0.77761],
                      [-0.84121, -0.77767,  1.46787,  None,      np.inf],
                      [ 0.54314,  0.93834,  np.nan,   0.88553, -0.05923],
                      [-1.41574, -1.02183,  1.30849, -2.48913,  0.85115],
                      [ 0.37366,  None,     0.06297,  0.84987,  0.00244],
                      [-0.08112,  0.43546, -0.08112, -0.08759, -1.85337],
                      [-0.58613, -0.58613, -0.77695, -0.6059,   0.68502],
                      [ 1.58808,  0.00631, -0.51175,  0.58934,  0.15235],
                      [np.NaN,    0.16232,  0.16232,  1.63457,     None],
                      [-0.43032,  0.7436,  -0.12928, -1.19885, -0.49476],
                      [-0.89768,  0.51395, -0.20339,  0.7875,   0.02682]])

test_arr2 = np.array([[ 2.6304,   1.3896,   2.6304,   0.46253,  0.46483],
                      [-0.9426,   1.14394, -0.25827,  0.47976,  1.36252],
                      [ 0.25409,  2.14233, -0.86814,  0.85802,  0.16498],
                      [ 1.83533, -0.46444,  1.20203, -0.37433, -0.21041],
                      [-0.83101,  0.24385, -0.3984,  -1.01423,  0.24385],
                      [-0.20434,  np.NaN,  -1.55538, -1.55538,  0.87396],
                      [-0.13926, -0.07155,  1.51058, -1.72313,  0.15493],
                      [np.Inf,    0.73847, -1.13322,  np.NaN,   0.03807],
                      [-0.90375, -0.08102,  1.45346,  0.98227, -1.07415],
                      [ 0.03729, -0.48555, -0.48555, -1.38026,  0.77761],
                      [-0.84121, -0.77767,  1.46787,  np.Inf,    np.inf],
                      [ 0.54314,  0.93834,  np.nan,   0.88553, -0.05923],
                      [-1.41574, -1.02183,  1.30849, -2.48913,  0.85115],
                      [ 0.37366,  np.Inf,   0.06297,  0.84987,  0.00244],
                      [-0.08112,  0.43546, -0.08112, -0.08759, -1.85337],
                      [-0.58613, -0.58613, -0.77695, -0.6059,   0.68502],
                      [ 1.58808,  0.00631, -0.51175,  0.58934,  0.15235],
                      [np.NaN,    0.16232,  0.16232,  1.63457,   np.Inf],
                      [-0.43032,  0.7436,  -0.12928, -1.19885, -0.49476],
                      [-0.89768,  0.51395, -0.20339,  0.7875,   0.02682]])

test_arr3 = np.array([[ 0.46483,  2.6304 ,  2.26799,  2.2076 ,  1.88484],
                      [ 1.36252, -0.9426 , -0.25827, -0.62387, -0.89855],
                      [ 0.16498,  0.25409, -0.86814,  0.26233,  0.41306],
                      [-0.21041,  1.83533,  1.20203,  1.47084,  2.17956],
                      [ 0.24385, -0.83101, -0.3984 , -0.75119, -0.57289],
                      [ 0.87396, -0.20434, -1.55538, -0.22432, -0.4151 ],
                      [ 0.15493, -0.13926,  1.51058, -0.32872, -0.07155],
                      [ 0.03807, -1.1727 , -1.13322, -1.26544, -1.3132 ],
                      [-1.07415, -0.90375,  1.45346, -0.35543, -0.9496 ],
                      [ 0.77761,  0.03729, -0.48555,  0.38026, -0.48555],
                      [ 1.46787, -0.84121,  1.46787, -0.75293, -0.77767],
                      [-0.05923,  0.54314,  0.93834,  0.63616,  0.93834],
                      [ 0.85115, -1.41574,  1.30849, -1.48913, -1.02183],
                      [ 0.00244,  0.37366,  0.06297,  0.39341,  0.15925],
                      [-1.85337, -0.08112, -0.80318, -0.08759,  0.43546],
                      [ 0.68502, -0.58613, -0.77695, -0.6059 , -0.58613],
                      [ 0.15235,  1.58808, -0.51175,  1.35543,  1.51465],
                      [-0.76321, -0.39482,  0.16232, -0.48871,  0.16232],
                      [-0.49476, -0.43032, -0.12928, -0.59885, -0.42284],
                      [ 0.02682,  0.58866, -0.20339,  0.7875 ,  0.51395]])

test_arr4 = np.array([[ 2.6304,   1.88484,  2.26799,  2.2076,   0.46483],
                      [-0.9426,  -0.89855, -0.25827, -0.62387,  1.36252],
                      [ 0.25409,  0.41306, -0.86814,  0.26233,  0.16498],
                      [ 1.83533,  2.17956,  1.20203,  1.47084, -0.21041],
                      [-0.83101, -0.57289, -0.3984,  -0.75119,  0.24385],
                      [-0.20434, -0.4151,  -1.55538, -0.22432,  0.87396],
                      [-0.13926, -0.07155,  1.51058, -0.32872,  0.15493],
                      [-1.1727,  -1.3132,  -1.13322, -1.26544,  0.03807],
                      [-0.90375, -0.9496,   1.45346, -0.35543, -1.07415],
                      [ 0.03729, -0.48555, -0.48555,  0.38026,  0.77761],
                      [-0.84121, -0.77767,  1.46787, -0.75293,  1.46787],
                      [ 0.54314,  0.93834,  0.93834,  0.63616, -0.05923],
                      [-1.41574, -1.02183,  1.30849, -1.48913,  0.85115],
                      [ 0.37366,  0.15925,  0.06297,  0.39341,  0.00244],
                      [-0.08112,  0.43546, -0.80318, -0.08759, -1.85337],
                      [-0.58613, -0.58613, -0.77695, -0.6059,   0.68502],
                      [ 1.58808,  1.51465, -0.51175,  1.35543,  0.15235],
                      [-0.39482,  0.16232,  0.16232, -0.48871, -0.76321],
                      [-0.43032, -0.42284, -0.12928, -0.59885, -0.49476],
                      [ 0.58866,  0.51395, -0.20339,  0.7875,   0.02682]])

# VIF Test 1 : Numeric values  with None, NaN, Inf (Exception Expected)
# vif(test_arr1, 3, add_constant=False)

# VIF Test 2 : Numeric values with NaN, Inf (Exception Expected)
# vif(test_arr2, 3, add_constant=False)

# VIF Test 3 : Numeric values only (Normal)
vif(test_arr3, 3, add_constant=False)

# Feature Selection with VIF (Normal)
filtered, dropped = fsv(test_arr3, threshold=5)
print(filtered)
print(dropped)

